version: "3.7"
services:
  iquidus-mongo:
    container_name: iquidus-mongodb
    image: mongo:4.2-bionic

    restart: always

    # Expose ports to other services and not the host machines
    expose:
      - 27017

    environment:
       MONGO_INITDB_ROOT_USERNAME: root
       MONGO_INITDB_ROOT_PASSWORD: password
       MONGO_INITDB_DATABASE: root-db

    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro # reload using docker-compose down -v (Note that this deletes the volumes!)
      - iquidus-mongo:/data/db

  explorer:
    container_name: iquidus-explorer
    build:
      context: .
      dockerfile: Dockerfile

    restart: unless-stopped

    # add variables from the docker-compose environment to the container.
    # adding to this environment can be done by using a .env file
    environment:
      - IQUIDUS_SETTINGS={"title":"NiftyCoin Explorer","address":"127.0.0.1:3001","port":"3001","coin":"NiftyCoin","symbol":"NFY","dbsettings":{"user":"iquidus","password":"3xp!0reR","database":"explorerdb","address":"mongo","port":"27017"},"wallet":{"host":"${RPCHOST}","port":"${RPCPORT}","username":"${RPCUSER}","password":"${RPCPASS}"}}

    restart: unless-stopped

    # Ports will be exposed to the host machine to a random port or a given port
    ports:
      - 3001:3001

    depends_on:
      - iquidus-mongo
#      - niftynode-rpc

volumes:
  iquidus-mongo:
    driver: local

# Remember to start the network before running this file:
# $ docker network create mydockernet
#
# Then you can start each of the docker-compose.yml files like this:
# $ docker-compose -f project_one/docker-compose.yml up -d
# $ docker-compose -f project_two/docker-compose.yml up -d
networks:
  default:
    external:
      name: mydockernet
